{ stdenv
, lib
, epnixLib
, mkEpicsPackage
, fetchgit
, fetchpatch
, version
, sha256
, readline
, local_config_site ? { }
, local_release ? { }
}:

with lib;

let
  atLeast = versionAtLeast version;
  older = versionOlder version;
in
mkEpicsPackage {
  pname = "epics-base";
  inherit version;
  varname = "EPICS_BASE";

  inherit local_config_site local_release;

  makeFlags = [
    "COMMANDLINE_LIBRARY=READLINE_NCURSES"
    "READLINE_DIR=${readline}"
  ];

  isEpicsBase = true;

  src = fetchgit {
    url = "https://git.launchpad.net/epics-base";
    rev = "R${version}";
    inherit sha256;
  };

  patches = (optionals (older "7.0.5") [
    # Support "undefine MYVAR" in convertRelease.pl
    # Fixed by commit 79d7ac931502e1c25b247a43b7c4454353ac13a6
    ./handle-make-undefine-variable.patch
  ]);

  # TODO: removing build platform Perl library actually removes every Perl
  # library since it's the only one...
  preFixup =
    ''
      # Remove lines that start with `#` for the TOOLCHAIN files.
      #
      # This file is generated by `gcc -E`, and outputs header dependencies in the
      # "comments". Unfortunately, a glibc header is part of them, which means Nix
      # would pull `glibc.dev` as a runtime dependency, which would add ~10MB to
      # the closure.
      #
      # The file is sourced by Make, so comments should have no effect
      for file in $out/cfg/TOOLCHAIN.*; do
        sed -i '/^#/d' "$file"
      done
    ''
    + (optionalString (stdenv.buildPlatform != stdenv.hostPlatform) ''
      # Remove the build platform pkg-config file, since we are stripping the
      # build platform outputs from the result
      # TODO: the architecture may be differently named in certain cases (e.g. windows)
      #
      # Also remove the build platform "native" perl library
      rm -rf \
        $out/lib/pkgconfig/epics-base-${stdenv.buildPlatform.linuxArch}.pc \
        $out/lib/perl/*/${stdenv.buildPlatform.system}*
    '');

  buildInputs = [ readline ];
  nativeBuildInputs = [ readline ];

  # TODO: Some tests fail
  doCheck = false;

  meta = {
    description = "The Experimental Physics and Industrial Control System";
    homepage = "https://epics-controls.org/";
    license = epnixLib.licenses.epics;
    maintainers = with epnixLib.maintainers; [ minijackson ];
  };
}
